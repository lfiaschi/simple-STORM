project(storm)
cmake_minimum_required(VERSION 2.8)
SET(CMAKE_MODULE_PATH  ${CMAKE_MODULE_PATH}  ${storm_SOURCE_DIR}/../cmake)

FIND_PACKAGE( Vigra 1.9.0 REQUIRED )
FIND_PACKAGE( FFTW REQUIRED )
FIND_PACKAGE( HDF5 )
FIND_PACKAGE( OpenMP )
FIND_PACKAGE( R REQUIRED)
include_directories(
${R_INCLUDE_DIRS}

${storm_SOURCE_DIR}

)


IF(HDF5_FOUND)
	ADD_DEFINITIONS(-DHDF5_FOUND)
ELSE(HDF5_FOUND)
	message(WARNING "Compiling without HDF5. No hdf5-input will be possible")
ENDIF(HDF5_FOUND)

set(CMAKE_CXX_FLAGS
    "${CMAKE_CXX_FLAGS} -fpermissive -std=c++11"
)

set(STORM_R_SCRIPT_DIR ${CMAKE_INSTALL_PREFIX}/share/simpleStorm/)
set(STORM_R_SCRIPT storm_fit.R)

add_definitions(-DSTORM_RSCRIPT=\"${STORM_R_SCRIPT}\" -DSTORM_RSCRIPT_DIR=\"${STORM_R_SCRIPT_DIR}\")

if(WIN32)
    add_definitions(-D__WIN__)
endif(WIN32)

# to be able to run the binaries without installing
file(COPY ${STORM_R_SCRIPT} DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

IF(CMAKE_COMPILER_IS_GNUCXX)
	ADD_EXECUTABLE(storm storm.cpp myimportinfo.cpp util.cpp)
	ADD_EXECUTABLE(wienerfilter EXCLUDE_FROM_ALL wienerfilter.cpp myimportinfo.cpp util.cpp)
ELSE(CMAKE_COMPILER_IS_GNUCXX)
	ADD_DEFINITIONS(-DEMULATE_GETOPT)
	ADD_EXECUTABLE(storm storm.cpp getoptMSVC.c myimportinfo.cpp util.cpp)
	ADD_EXECUTABLE(wienerfilter EXCLUDE_FROM_ALL wienerfilter.cpp getoptMSVC.c myimportinfo.cpp util.cpp)
ENDIF(CMAKE_COMPILER_IS_GNUCXX)

IF(OPENMP_FOUND)
	SET_TARGET_PROPERTIES(storm PROPERTIES COMPILE_FLAGS ${OpenMP_CXX_FLAGS})
	SET_TARGET_PROPERTIES(storm PROPERTIES LINK_FLAGS ${OpenMP_CXX_FLAGS})
	SET_TARGET_PROPERTIES(wienerfilter PROPERTIES COMPILE_FLAGS ${OpenMP_CXX_FLAGS})
	SET_TARGET_PROPERTIES(wienerfilter PROPERTIES LINK_FLAGS ${OpenMP_CXX_FLAGS})
ENDIF(OPENMP_FOUND)

TARGET_LINK_LIBRARIES(storm vigraimpex ${FFTW_LIBRARIES} ${R_LIBRARIES})
TARGET_LINK_LIBRARIES(wienerfilter vigraimpex ${FFTW_LIBRARIES} ${R_LIBRARIES})

IF(HDF5_FOUND)
    TARGET_LINK_LIBRARIES(storm ${HDF5_LIBRARIES}

)
    TARGET_LINK_LIBRARIES(wienerfilter ${HDF5_LIBRARIES}
)

    INCLUDE_DIRECTORIES( ${HDF5_INCLUDE_DIRS} )
ENDIF(HDF5_FOUND)

include_directories(
    ${CMAKE_CURRENT_BINARY_DIR}
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${Vigra_INCLUDE_DIRS}
    ${FFTW_INCLUDE_DIRS}
    )

ADD_SUBDIRECTORY(test)
set(BIN_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/bin)
install(TARGETS storm DESTINATION ${BIN_INSTALL_DIR})
install(FILES ${STORM_R_SCRIPT} DESTINATION ${STORM_R_SCRIPT_DIR})
